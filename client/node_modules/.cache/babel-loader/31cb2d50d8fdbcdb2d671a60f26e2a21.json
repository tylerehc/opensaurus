{"ast":null,"code":"import _toConsumableArray from \"/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/src/components/TaskList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\nimport { connect } from 'react-redux';\nimport { getTasks } from '../actions/taskActions';\nimport PropTypes from 'prop-types';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList() {\n    _classCallCheck(this, TaskList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskList).apply(this, arguments));\n  }\n\n  _createClass(TaskList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getItems();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var tasks = this.state.tasks;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"dark\",\n        style: {\n          marginBottom: '2rem'\n        },\n        onClick: function onClick() {\n          var name = prompt('Enter Task');\n\n          if (name) {\n            _this.setState(function (state) {\n              return {\n                tasks: _toConsumableArray(state.tasks).concat([{\n                  id: uuid(),\n                  name: name\n                }])\n              };\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Add Task\"), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(TransitionGroup, {\n        class: \"task-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, tasks.map(function (_ref) {\n        var id = _ref.id,\n            name = _ref.name;\n        return React.createElement(CSSTransition, {\n          key: id,\n          timeout: 500,\n          classNames: \"fade\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(ListGroupItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"remove-btn\",\n          color: \"danger\",\n          size: \"sm\",\n          onClick: function onClick() {\n            _this.setState(function (state) {\n              return {\n                tasks: state.tasks.filter(function (item) {\n                  return item.id !== id;\n                })\n              };\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"\\xD7\"), name));\n      }))));\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nTaskList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    task: state.task\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  getTasks: getTasks\n})(TaskList);","map":{"version":3,"sources":["/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/src/components/TaskList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","connect","getTasks","PropTypes","TaskList","props","getItems","tasks","state","marginBottom","name","prompt","setState","id","map","filter","item","propTypes","func","isRequired","object","mapStatetoProps","task"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\nimport { connect } from 'react-redux';\nimport { getTasks } from '../actions/taskActions';\nimport PropTypes from 'prop-types';\n\nclass TaskList extends Component {\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const { tasks } = this.state;\n    return(\n      <Container>\n        <Button\n          color=\"dark\"\n          style={{marginBottom: '2rem'}}\n          onClick={() => {\n            const name = prompt('Enter Task');\n            if(name) {\n              this.setState(state => ({\n                tasks: [...state.tasks, {id: uuid(), name}]\n              }))\n            }\n          }}\n        >Add Task</Button>\n\n        <ListGroup>\n          <TransitionGroup class=\"task-list\">\n            {tasks.map(({ id, name }) => (\n                <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                  <ListGroupItem>\n                    <Button\n                      className=\"remove-btn\"\n                      color=\"danger\"\n                      size=\"sm\"\n                      onClick={() => {\n                        this.setState(state => ({\n                          tasks: state.tasks.filter(item => item.id !== id)\n                        }));\n                      }}\n                    >&times;</Button>\n                    {name}\n                  </ListGroupItem>\n                </CSSTransition>\n            ))}\n          </TransitionGroup>\n\n        </ListGroup>\n\n      </Container>\n    )\n  }\n}\n\nTaskList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n}\n\nconst mapStatetoProps = (state) => ({\n  task: state.task\n});\n\nexport default connect(mapStatetoProps, { getTasks })(TaskList);\n"]},"metadata":{},"sourceType":"module"}