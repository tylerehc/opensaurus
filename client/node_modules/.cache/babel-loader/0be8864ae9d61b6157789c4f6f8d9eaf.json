{"ast":null,"code":"import _objectSpread from \"/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport uuid from 'uuid';\nimport { GET_TASKS, ADD_TASK, DELETE_TASK } from '../actions/types';\nvar initialState = {\n  tasks: [{\n    id: uuid(),\n    name: 'Logo'\n  }, {\n    id: uuid(),\n    name: 'Ads'\n  }, {\n    id: uuid(),\n    name: 'Webiste'\n  }, {\n    id: uuid(),\n    name: 'Cards'\n  }, {\n    id: uuid(),\n    name: 'Cow'\n  }, {\n    id: uuid(),\n    name: 'Moon'\n  }]\n};\n\nvar isSameById = function isSameById(payload) {\n  return function (_ref) {\n    var id = _ref.id;\n    return payload !== id;\n  };\n};\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_TASKS:\n      return _objectSpread({}, state);\n\n    case DELETE_TASK:\n      return _objectSpread({}, state, {\n        tasks: state.tasks.filter(isSameById(action.payload))\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/tylerhudson-crimi/Dropbox/Investments & Projects/BRP/dev/simple/client/src/reducers/taskReducer.js"],"names":["uuid","GET_TASKS","ADD_TASK","DELETE_TASK","initialState","tasks","id","name","isSameById","payload","state","action","type","filter"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,WAA7B,QAA+C,kBAA/C;AAGA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GADK,EAEL;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GAHK,EAIL;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GAJK,EAKL;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GALK,EAML;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GANK;AADY,CAArB;;AAWA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO;AAAA,SAAI;AAAA,QAAEH,EAAF,QAAEA,EAAF;AAAA,WAAUG,OAAO,KAAKH,EAAtB;AAAA,GAAJ;AAAA,CAA1B;;AAEA,eAAe,YAAuC;AAAA,MAA9BI,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AACpD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,SAAL;AACE,+BACKS,KADL;;AAGF,SAAKP,WAAL;AACE,+BACKO,KADL;AAEEL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,MAAZ,CAAmBL,UAAU,CAACG,MAAM,CAACF,OAAR,CAA7B;AAFT;;AAIF;AACE,aAAOC,KAAP;AAXJ;AAaD","sourcesContent":["import uuid from 'uuid';\nimport {GET_TASKS, ADD_TASK, DELETE_TASK} from '../actions/types';\n\n\nconst initialState = {\n  tasks: [\n    { id: uuid(), name: 'Logo'},\n    { id: uuid(), name: 'Ads'},\n    { id: uuid(), name: 'Webiste'},\n    { id: uuid(), name: 'Cards'},\n    { id: uuid(), name: 'Cow'},\n    { id: uuid(), name: 'Moon'}\n  ]\n}\n\nconst isSameById = payload => ({id}) => payload !== id;\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_TASKS:\n      return {\n        ...state\n      };\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(isSameById(action.payload))\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}